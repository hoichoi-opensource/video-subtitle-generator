#!/bin/bash

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Ensure we're in the correct directory
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$SCRIPT_DIR"

# Function to print colored output
print_status() {
    echo -e "${GREEN}✓${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}⚠${NC} $1"
}

print_error() {
    echo -e "${RED}❌${NC} $1"
}

# Check if virtual environment exists and activate it
if [[ "$VIRTUAL_ENV" == "" ]]; then
    if [ -d "venv" ]; then
        print_status "Activating virtual environment..."
        source venv/bin/activate
        
        # Verify activation worked
        if [[ "$VIRTUAL_ENV" != "" ]]; then
            print_status "Virtual environment activated: $(basename $VIRTUAL_ENV)"
        else
            print_error "Failed to activate virtual environment"
            exit 1
        fi
    else
        print_error "Virtual environment not found."
        echo ""
        echo "To install, run:"
        echo "  chmod +x install.sh"
        echo "  ./install.sh"
        exit 1
    fi
else
    print_status "Virtual environment already active: $(basename $VIRTUAL_ENV)"
fi

# Verify Python and required packages
if ! command -v python &> /dev/null; then
    print_error "Python not found in virtual environment"
    exit 1
fi

# Create necessary directories
print_status "Ensuring directories exist..."
mkdir -p output input temp jobs logs chunks subtitles

# Check if main.py exists
if [ ! -f "main.py" ]; then
    print_error "main.py not found. Please ensure you're in the correct directory."
    exit 1
fi

# Run the Python application
print_status "Starting Video Subtitle Generator..."
echo ""
python main.py "$@"
